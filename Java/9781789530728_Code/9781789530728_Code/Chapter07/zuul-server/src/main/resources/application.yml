spring:
  application:
    name: zuul-server  # Service registers under this name
  # Added to fix -  java.lang.IllegalArgumentException: error at ::0 can't find referenced pointcut hystrixCommandAnnotationPointcut
  #aop:
  #  auto: false
  # There was an issue with RC build of Streams, therefore used the build.snapshot.
  # Once stable version is released allow-bean-definition-overriding can be removed.
#  main:
#    allow-bean-definition-overriding: true

endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false

zuul:
  ignoredServices: "*"
  sensitiveHeaders:
  routes:
    authapi:
      path: /authapi/**
      serviceId: security-service
      stripPrefix: true
    restaurantapi:
      path: /restaurantapi/**
      serviceId: restaurant-service
      stripPrefix: true

server:
  port: 8765
  compression:
    enabled: true

security:
  user:
    password: password
  oauth2:
    client:
      clientId: client
      clientSecret: secret123
      scope: apiAccess
      accessTokenUri: http://localhost:9001/auth/oauth/token
      userAuthorizationUri: http://localhost:9001/auth/oauth/authorize
      clientAuthenticationScheme: form
    resource:
      filter-order: 3
      #      tokenInfoUri: http://localhost:9001/auth/oauth/check_token
      userInfoUri: http://localhost:9001/auth/me
      #      preferTokenInfo: false
  sessions: ALWAYS



hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 2
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 30000
        requestVolumeThreshold: 2
      execution:
        isolation:
          #          strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 6000

# Discovery Server Access
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}}

  client:
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://user:password@localhost:8761}/eureka/
    fetchRegistry: true

logging:
  level:
    ROOT: INFO
    org.springframework.web: INFO
    org.springframework.security: DEBUG

app:
  ConnectTimeout: 100
  ReadTimeout: 3000
